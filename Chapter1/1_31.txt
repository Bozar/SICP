#lang sicp
; vim: set tw=80:
; 1.31

; a:

(define (product term a next b)
    (if (> a b)
        1
        (* (term a)
            (product term (next a) next b))))

(define (factorial n)
    (define (inc x) (+ 1 x))
    (define (identical x) x)
    (product identical 1 inc n))

(define (pai n)
    (define (inc x) (+ x 1))
    (define (factor x)
        (if (even? x)
            (/ (+ x 2) (+ x 1))
            (/ (+ x 1) (+ x 2))))
    (* 4 (product factor 1 inc n)))

; b:

(define (product-iter term a next b)
    (define (iter a result)
        (if (> a b)
            result
            (iter (next a) (* result (term a)))))
    (iter a 1))

