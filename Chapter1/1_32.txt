#lang sicp
; vim: set tw=80:
; 1.32

; a:

(define (accumulate combiner null-value term a next b)
    (if (> a b)
        null-value
        (combiner
            (term a)
            (accumulate combiner null-value term (next a) next b))))

(define (sum term a next b)
    (accumulate + 0 term a next b))

(define (product term a next b)
    (accumulate * 0 term a next b))

; b:

(define (accumulate combiner null-value term a next b)
    (define (iter n result)
        (if n > b)
            result
            (iter (next n) (combiner (term n) result)))
    (iter a null-value))

